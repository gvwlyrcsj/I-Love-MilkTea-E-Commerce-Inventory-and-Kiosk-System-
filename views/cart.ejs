<%- include('partials/header') %>

<div id="alertContainer" class="my-3"></div>

<div class="container my-5">
    <h2 class="text-center mb-4">Your Cart</h2>
    
    <!-- Cart Table Start -->
    <div class="row justify-content-center">
        <div class="col-12"> <!-- Full-width column -->
            <table class="table table-bordered w-100" id="cartTable"> <!-- Full-width table -->
                <thead style="background-color: #f48fb1; color: white;">
                    <tr>
                        <th><input type="checkbox" id="select-all" /></th>
                        <th>Product</th>
                        <th>Product Name</th>
                        <th>Size</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Total Price</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <% cartItems.forEach(item => { %>
                        <tr>
                            <td><input type="checkbox" class="item-select" value="<%= item.id %>" /></td>
                            <td>
                                <% if (item.imageUrl) { %>
                                    <img src="<%= item.imageUrl %>" alt="<%= item.name %>" style="width: 50px; height: auto;">
                                <% } else { %>
                                    No image
                                <% } %>                   
                            </td>
                            <td><%= item.name %></td>
                            <td>
                                <select class="form-control size-select" data-id="<%= item.id %>">
                                    <option value="small" <%= item.size === 'small' ? 'selected' : '' %>>Small</option>
                                    <option value="medium" <%= item.size === 'medium' ? 'selected' : '' %>>Medium</option>
                                    <option value="large" <%= item.size === 'large' ? 'selected' : '' %>>Large</option>
                                    <option value="xl" <%= item.size === 'xl' ? 'selected' : '' %>>XL</option>
                                </select>
                            </td>
                            <td><input type="number" class="form-control quantity-input" data-id="<%= item.id %>" value="<%= item.quantity %>"></td>
                            <td class="price">₱<%= parseFloat(item.price).toFixed(2) %></td>
                            <td class="total-price">₱<%= (parseFloat(item.price) * item.quantity).toFixed(2) %></td>
                            <td><button type="button" class="btn btn-danger btn-sm delete-btn" data-id="<%= item.id %>">Delete</button></td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
            
            <div class="text-right">
                <p class="font-weight-bold">Total for Selected Items: ₱<span id="selectedTotal">0</span></p>
            </div>

            <!-- Checkout Button for Selected Items -->
            <div class="text-right mt-4">
                <form id="checkoutForm" action="/cart/checkout" method="POST">
                    <input type="hidden" name="selectedItems" id="selectedItems" />
                    <button type="button" id="checkoutButton" class="btn btn-primary btn-lg">Proceed to Checkout</button>
                </form>
            </div>
        </div>
    </div>
    <!-- Cart Table End -->
</div>

<!-- Alert Modal -->
<div class="modal fade" id="alertModal" tabindex="-1" aria-labelledby="alertModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" style="max-width: 400px;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="alertModalLabel">Notification</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center" id="alertModalBody">
                <!-- Alert message will be inserted here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<%- include('partials/footer') %>

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<!-- DataTables JS -->
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.js"></script>
<!-- html2canvas JS -->
<script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"></script>
<script>
$(document).ready(function () {
    // Initialize DataTable
    $('#cartTable').DataTable({
        dom: '<"top"lf>rt<"bottom"ip><"clear">',
        order: [[6, 'desc']], // Sort by Total Price in descending order
    });

    // Select All Checkbox
    $('#select-all').on('change', function () {
        $('.item-select').prop('checked', this.checked);
        updateSelectedTotal();
    });

    // Update Total for Selected Items
    $(document).on('change', '.item-select', function () {
        updateSelectedTotal();
    });

    // Update Prices and Total Prices
    $(document).on('change', '.quantity-input, .size-select', function () {
        const id = $(this).data('id');
        const quantity = parseFloat($(`.quantity-input[data-id=${id}]`).val());
        const size = $(`.size-select[data-id=${id}]`).val();
        const row = $(this).closest('tr');

        // Map prices based on size
        let price = 0;
        switch (size) {
            case 'small': price = 59; break;
            case 'medium': price = 69; break;
            case 'large': price = 79; break;
            case 'xl': price = 89; break;
        }

        row.find('.price').text(`₱${price.toFixed(2)}`);
        const totalPrice = price * quantity;
        row.find('.total-price').text(`₱${totalPrice.toFixed(2)}`);

        updateSelectedTotal();

        // Update the cart with AJAX
        updateCart(id, quantity, size, price);
    });

    // Checkout Button Logic
    $('#checkoutButton').on('click', function () {
        const selectedIds = $('.item-select:checked').map(function () {
            return $(this).val();
        }).get();

        if (selectedIds.length === 0) {
            showAlert('Please select at least one item to checkout.', 'error');
            return;
        }

        // Submit selected items
        $('#selectedItems').val(JSON.stringify(selectedIds));
        $('#checkoutForm').submit();
    });

    // Delete Button Logic
    $(document).on('click', '.delete-btn', function () {
        const itemId = $(this).data('id');
        fetch(`/cart/delete/${itemId}`, { method: 'DELETE' })
            .then((response) => response.json())
            .then((data) => {
                if (data.success) {
                    $(this).closest('tr').remove();
                    updateSelectedTotal();
                    showAlert('Item removed successfully.', 'success');
                } else {
                    showAlert('Failed to remove item.', 'error');
                }
            });
    });

    // Function to Update Selected Total
    function updateSelectedTotal() {
        let selectedTotal = 0;
        $('.item-select:checked').each(function () {
            const row = $(this).closest('tr');
            const totalPrice = parseFloat(row.find('.total-price').text().replace('₱', '')) || 0;
            selectedTotal += totalPrice;
        });
        $('#selectedTotal').text(selectedTotal.toFixed(2));
    }

    // AJAX function to update cart
    function updateCart(id, quantity, size, price) {
        $.ajax({
            url: '/cart/update',
            method: 'POST',
            data: JSON.stringify({
                id: id,
                quantity: quantity,
                size: size,
                price: price,
            }),
            contentType: 'application/json',
            success: function (response) {
                showAlert(response.message, 'success');
            },
            error: function (xhr) {
                const errorMessage = xhr.responseJSON
                    ? xhr.responseJSON.message
                    : 'An error occurred. Please try again.';
                showAlert(errorMessage, 'error');
                console.error(`Error: ${errorMessage}`, xhr);
            },
        });
    }

    function showAlert(message, type) {
    const alertTypes = {
        success: 'alert-success',
        error: 'alert-danger',
        warning: 'alert-warning',
        info: 'alert-info',
    };

    const alertClass = alertTypes[type] || 'alert-info'; // Default to 'info' if type is not recognized

    // Create the alert HTML
    const alertHtml = `
        <div class="alert ${alertClass} alert-dismissible fade show d-flex justify-content-between align-items-center" role="alert">
            <div>
                <strong>${type.charAt(0).toUpperCase() + type.slice(1)}!</strong> ${message}
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    `;

    // Append the alert to a predefined container
    $('#alertContainer').html(alertHtml);

    // Automatically remove the alert after 5 seconds
    setTimeout(() => {
        $('.alert').alert('close');
    }, 5000);
}
});
</script>
