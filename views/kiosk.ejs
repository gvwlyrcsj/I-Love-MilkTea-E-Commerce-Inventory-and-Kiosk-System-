<%- include('partials/kioskheader') %>   
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Add Bootstrap Icons CDN -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">


    <title>Product List</title>
    <style>
        #orderNumber i {
    color: #17a2b8;  /* Your blue color */
    font-size: 3rem;  /* Larger icon */
    margin-right: 10px; /* Space between icon and order number */
        }

        #orderNumber {
            text-align: center;
            font-weight: bold;
        }
        .product-item {
            max-width: 250px;
        }

        .font-weight-bold {
            font-weight: bold;
        }
        .modal-img {
            width: 100%;
            height: auto;
        }
        .total-amount {
            text-align: right;
            font-weight: bold;
            display: inline-block;
        }
        .total-label {
            display: block;
            margin-bottom: 0;
            font-weight: normal;
        }
        .container {
            max-width: 1200px;
        }

        /* Custom CSS to center the modals */
        .modal-dialog-centered {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh; /* Full viewport height */
        }

        .modal-content {
            margin: 0 auto; /* Center content inside the modal */
        }
        .unavailable-label {
            color: red;
            font-size: 14px;
            font-weight: bold;
            margin-top: 5px;
        }
        .icon-container {
            margin-bottom: 10px; /* Adjust space between icon and button */
        }
        .option-container {
            text-align: center;
        }

    </style>
    <!-- Styles -->
<style>
    /* Sticky Orders Section Styles */
    .orders-sticky {
        position: fixed;
        bottom: 0;
        right: 0;
        width: 100%;
        max-width: 400px;
        z-index: 1050;
        border: 1px solid #ddd;
        background-color: #fff;
        box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.2);
        border-radius: 8px 8px 0 0;
    }

    .orders-header {
        cursor: default; /* Prevent cursor pointer since there's no interaction */
    }

    .orders-content {
        max-height: 300px;
        overflow-y: auto;
        padding: 10px;
        background-color: #fff;
    }

    /* Styling for Review Order button */
    #reviewOrder {
        font-size: 14px;
        padding: 5px 10px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

    #expandArrow {
        font-size: 12px;
        margin-left: 5px;
    }
</style>

</head>
<body>

<br><br><br>
<div class="container">
    <div class="row">
        <!-- Left Arrow -->
        <div class="col-1 d-flex justify-content-center align-items-center">
            <button class="btn-arrow" id="prevBtn">
                <i class="fas fa-chevron-left"></i>
            </button>
        </div>
        
        <!-- Products Section (Middle Column) -->
        <div class="col-lg-10 col-md-10 mb-4 overflow-hidden">
            <div class="product-row d-flex justify-content-start align-items-center">
                <% product.forEach(product => { %>
                <div class="product-item col-lg-3 col-md-6 mb-4 pb-2 d-flex justify-content-center">
                    <div class="product-card d-flex flex-column align-items-center text-center bg-light rounded py-5 px-3">
                        <div class="position-relative bg-primary rounded-circle mt-n3 mb-4 p-3 product-image" style="width: 150px; height: 150px; cursor: pointer;">
                            <img class="rounded-circle w-100 h-100" src="<%= product.imageUrl %>" style="object-fit: cover;">
                        </div>
                        <h5 class="font-weight-bold mb-4"><%= product.name %></h5>
                        <% if (product.quantity_in_stock <= 0) { %>
                            <span class="text-danger font-weight-bold">CURRENTLY UNAVAILABLE</span>
                        <% } %>
                    </div>
                </div>
                <% }); %>
            </div>
        </div>

        <!-- Right Arrow -->
        <div class="col-1 d-flex justify-content-center align-items-center">
            <button class="btn-arrow" id="nextBtn">
                <i class="fas fa-chevron-right"></i>
            </button>
        </div>
    </div>
</div>

<!-- Custom CSS for Scrolling -->
<style>
    .product-row {
        display: flex;
        overflow-x: auto;
        gap: 20px;
        padding: 10px 0;
        scroll-snap-type: x mandatory;
    }

    .product-item {
        flex-shrink: 0;
    }

    .product-card {
        width: 100%;
    }

    .container {
        position: relative;
    }

    /* Styling for the arrow buttons */
    .btn-arrow {
        font-size: 40px; /* Larger arrow size */
        padding: 10px;
        background: none; /* No background */
        border: none;
        color: #000; /* Black color for arrows */
        cursor: pointer;
        transition: transform 0.2s ease, color 0.2s ease;
    }

    /* Hover effect for arrows */
    .btn-arrow:hover {
        transform: scale(1.3); /* Enlarges the arrow when hovered */
        color: #007bff; /* Change color on hover */
    }

    .col-1 {
        display: flex;
        justify-content: center;
        align-items: center;
    }
</style>

<!-- JavaScript for Arrow Navigation -->
<script>
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    const productRow = document.querySelector('.product-row');

    prevBtn.addEventListener('click', () => {
        productRow.scrollBy({ left: -300, behavior: 'smooth' });
    });

    nextBtn.addEventListener('click', () => {
        productRow.scrollBy({ left: 300, behavior: 'smooth' });
    });
</script>

<!-- Footer Orders Section -->
<div id="ordersFooter" class="fixed-bottom text-white py-2 px-3" style="background-color: #62c3e7;">
    <div class="d-flex justify-content-between align-items-center" style="background-color: #62c3e7;">
        <!-- Total Amount on the Left -->
        <div class="d-flex flex-column"style="background-color: #62c3e7;">
            <span class="total-label font-weight-bold">Total Amount:</span>
            <span class="total-amount">₱<span id="totalAmount">0.00</span></span>
        </div>
        
        <!-- View Cart/Hide Cart Button -->
        <button id="toggleCart" class="btn btn-light btn-sm">
            <i class="fas fa-shopping-cart mr-2"></i><span>View Cart</span>
        </button>
    </div>

    <!-- Orders Content -->
    <div id="ordersContent" class="orders-content d-none bg-white text-dark rounded shadow p-3 mt-2">
        <ul id="orderPreviewList" class="list-group mb-4"></ul>
        <button id="reviewOrder" class="btn w-auto btn-sm text-white" style="background-color: #f195b2;">Review Order and Pay</button>
    </div>
</div>

<style>
    #ordersFooter {
        z-index: 1050; /* Ensures it stays above other elements */
        box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1);
    }

    #ordersContent {
        max-height: 300px;
        overflow-y: auto;
    }

    .total-label, .total-amount {
        font-size: 1.2rem;
    }

    #reviewOrder {
        font-size: 0.875rem; /* Smaller text size */
        padding: 5px 10px; /* Adjusts padding for a compact look */
        border: none; /* Removes default border */
        border-radius: 5px; /* Adds rounded corners */
    }
</style>

<script>
    // Toggle Cart Button Functionality
    document.getElementById('toggleCart').addEventListener('click', function () {
        const ordersContent = document.getElementById('ordersContent');
        if (ordersContent.classList.contains('d-none')) {
            ordersContent.classList.remove('d-none');
            this.innerHTML = '<i class="fas fa-shopping-cart mr-2"></i>Hide Cart';
        } else {
            ordersContent.classList.add('d-none');
            this.innerHTML = '<i class="fas fa-shopping-cart mr-2"></i>View Cart';
        }
    });

    // Review Order and Pay Button Functionality
    document.getElementById('reviewOrder').addEventListener('click', function () {
        const ordersContent = document.getElementById('ordersContent');
        ordersContent.classList.add('d-none'); // Hide the orders content
        const toggleCartButton = document.getElementById('toggleCart');
        toggleCartButton.innerHTML = '<i class="fas fa-shopping-cart mr-2"></i>View Cart'; // Reset toggle button text
    });
</script>

      


<!-- Review Order Modal -->
<div id="reviewOrderModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Review Your Order</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <ul id="fullOrderList" class="list-group"></ul>
                <div class="d-flex flex-column align-items-end mb-2">
                    <h5 class="total-label">Total Amount:</h5>
                    <h5 class="total-amount">₱<span id="modalTotalAmount">0.00</span></h5>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="proceedToPayment">Proceed to Payment</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<!-- Order Options Modal -->
<div id="orderOptionsModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Order Options</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-center">
                <img id="modalProductImage" class="modal-img rounded-circle mb-3" src="" alt="Product Image">
                <h5 id="modalProductName" class="font-weight-bold"></h5>
                
                <!-- Size Selector with Radio Buttons -->
                <div class="form-group">
                    <div id="sizeOptions" class="d-flex justify-content-center">
                        <label class="mr-3">
                            <input type="radio" name="size" value="small" checked> Small
                        </label>
                        <label class="mr-3">
                            <input type="radio" name="size" value="medium"> Medium
                        </label>
                        <label class="mr-3">
                            <input type="radio" name="size" value="large"> Large
                        </label>
                        <label>
                            <input type="radio" name="size" value="xl"> XL
                        </label>
                    </div>
                </div>
                
                <!-- Quantity Selector as Stepper -->
                <div class="form-group">
                    <div class="d-flex justify-content-center align-items-center">
                        <button type="button" class="btn btn-outline-secondary btn-sm" id="decreaseQuantity">-</button>
                        <input type="number" class="form-control text-center mx-2" id="quantity" value="1" min="1" style="width: 60px;">
                        <button type="button" class="btn btn-outline-secondary btn-sm" id="increaseQuantity">+</button>
                    </div>
                </div>
                
                <h5>Total: ₱<span class="modal-total-price">59</span></h5>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="addToOrder">Add to Order</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>


<style>
    /* Ensure the image doesn't get too big */
    .modal-img {
        width: 120px;  /* Set width to limit size */
        height: 120px; /* Set height to maintain the circular shape */
        object-fit: cover; /* Ensures the image covers the area without distorting */
    }
</style>

<!-- Dine In/Take Out Modal -->
<div id="paymentOptionModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select Payment Option</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-center">
                <h5>Please select an option:</h5>
                <!-- Dine In Button -->
                <div class="option-container mb-3">
                    <div class="icon-container">
                        <i class="fas fa-glass-whiskey fa-3x"></i> <!-- Drink icon -->
                    </div>
                    <button id="dineIn" class="btn btn-primary m-2">Dine In</button>
                </div>
                <!-- Take Out Button -->
                <div class="option-container mb-3">
                    <div class="icon-container">
                        <i class="fas fa-box fa-3x"></i> <!-- Take-out box icon -->
                    </div>
                    <button id="takeOut" class="btn btn-secondary m-2">Take Out</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Receipt Modal -->
<div class="modal fade" id="receiptModal" tabindex="-1" aria-labelledby="receiptModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="receiptModalLabel">This is your order number</h5>
            </div>
            <div class="modal-body text-center">
                <!-- Receipt Icon -->
                <i class="fas fa-receipt" style="font-size: 50px; color: #17a2b8;"></i>
                <h4 id="orderNumber" style="margin-top: 60px;"></h4>
                <p id="orderDate"></p>
                <ul id="receiptOrderList" class="list-group mb-3"></ul>
                <h5 class="text-end">Total: ₱<span id="receiptTotalAmount"></span></h5>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="finishButton">Finish</button>
            </div>
        </div>
    </div>
</div>


<!-- Thank You Modal -->
<div class="modal fade" id="thankYouModal" tabindex="-1" aria-labelledby="thankYouModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="thankYouModalLabel">Thank You!</h5>
            </div>
            <div class="modal-body text-center">
                <!-- Thank You Icon -->
                <div class="icon-container mb-4">
                    <i class="fas fa-check-circle fa-5x text-success"></i> <!-- Check icon -->
                </div>
                <!-- Thank You Message -->
                <p class="thank-you-message">Your order has been successfully processed.</p>
            </div>
            <div class="modal-footer d-flex justify-content-center">
                <!-- Close button will trigger page reload -->
                <button type="button" class="btn btn-primary btn-lg" data-bs-dismiss="modal" id="reloadPageButton">START NEW ORDER</button>
            </div>
        </div>
    </div>
</div>



<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.4.4/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>

document.getElementById('decreaseQuantity').addEventListener('click', function() {
    let quantityInput = document.getElementById('quantity');
    let quantity = parseInt(quantityInput.value);
    if (quantity > 1) {
        quantityInput.value = quantity - 1;
        updateModalTotalPrice(document.querySelector('input[name="size"]:checked').value, quantity - 1);
    }
});

document.getElementById('increaseQuantity').addEventListener('click', function() {
    let quantityInput = document.getElementById('quantity');
    let quantity = parseInt(quantityInput.value);
    quantityInput.value = quantity + 1;
    updateModalTotalPrice(document.querySelector('input[name="size"]:checked').value, quantity + 1);
});

document.querySelectorAll('input[name="size"]').forEach(radio => {
    radio.addEventListener('change', function() {
        updateModalTotalPrice(this.value, parseInt(document.getElementById('quantity').value));
    });
});

$('#quantity').on('change', function () {
    const size = $('input[name="size"]:checked').val();
    const quantity = parseInt($(this).val()) || 1;
    updateModalTotalPrice(size, quantity);
});

$('input[name="size"]').on('change', function () {
    const size = $(this).val();
    const quantity = parseInt($('#quantity').val()) || 1;
    updateModalTotalPrice(size, quantity);
});


    let totalAmount = 0;
    let orders = [];

    function updateModalTotalPrice(size = 'small', quantity = 1) {
    const priceMap = { small: 59, medium: 69, large: 79, xl: 89 };
    const price = priceMap[size] || priceMap['small']; // Default to 'small' price if size is undefined
    const totalPrice = price * quantity;
    $('.modal-total-price').text(totalPrice.toFixed(2));
}


function updateOrderList() {
    $('#fullOrderList').empty();
    $('#orderPreviewList').empty();
    orders.forEach((order, index) => {
        const orderHtml = `
            <li class="list-group-item">
                <div class="d-flex justify-content-between align-items-center mb-3 p-2 border rounded">
                    <div class="flex-grow-1 me-3">
                        <span>${order.name} (Size: ${order.size}, Qty: ${order.quantity})</span>
                        <div class="d-flex align-items-center mt-1">
                            <input type="number" class="form-control order-quantity me-2" data-index="${index}" value="${order.quantity}" min="1" style="width: 70px;">
                            <select class="form-control order-size" data-index="${index}" style="width: 100px;">
                                <option value="small" ${order.size === 'small' ? 'selected' : ''}>Small</option>
                                <option value="medium" ${order.size === 'medium' ? 'selected' : ''}>Medium</option>
                                <option value="large" ${order.size === 'large' ? 'selected' : ''}>Large</option>
                                <option value="xl" ${order.size === 'xl' ? 'selected' : ''}>XL</option>
                            </select>
                        </div>
                    </div>
                    <div class="fw-bold">₱${order.price}‎ ‎ ‎ </div>
                
                    <span class="btn btn-danger btn-sm ms-3 delete-order" data-index="${index}" aria-label="Delete">&times;</span>
                </div>
            </li>`;

        $('#fullOrderList').append(orderHtml);
        $('#orderPreviewList').append(`<li class="list-group-item">${order.name} (Size: ${order.size}, Qty: ${order.quantity}) - ₱${order.price}</li>`);
    });
    updateTotalAmount();
}

$('#orderOptionsModal').on('show.bs.modal', function () {
    $('input[name="size"]').first().prop('checked', true); // Select 'small' by default
    $('#quantity').val(1); // Default quantity to 1
    updateModalTotalPrice('small', 1); // Update modal price
});

    function updateTotalAmount() {
        totalAmount = orders.reduce((acc, order) => acc + parseFloat(order.price), 0);
        $('#totalAmount').text(totalAmount.toFixed(2));
        $('#modalTotalAmount').text(totalAmount.toFixed(2));
        $('#orderPreviewList').toggle(orders.length > 0);
        $('#reviewOrder').toggle(orders.length > 0);
    }

    $(document).on('click', '.product-image', function() {
        const productName = $(this).closest('.product-item').find('.font-weight-bold').text();
        const productImage = $(this).find('img').attr('src');
        $('#modalProductName').text(productName);
        $('#modalProductImage').attr('src', productImage);
        $('#quantity').val(1);
        $('#orderOptionsModal').modal('show');
    });

    $('#quantity').on('input', function() {
        const size = $('.size-selector').val();
        const quantity = parseInt($(this).val());
        updateModalTotalPrice(size, quantity);
    });

    $('.size-selector').on('change', function() {
        const size = $(this).val();
        const quantity = parseInt($('#quantity').val());
        updateModalTotalPrice(size, quantity);
    });

    $('#addToOrder').on('click', function () {
    const size = $('input[name="size"]:checked').val(); // Radio button for size
    const quantity = parseInt($('#quantity').val()) || 1; // Default to 1 if quantity is invalid
    const priceMap = { small: 59, medium: 69, large: 79, xl: 89 };
    const price = (priceMap[size] || priceMap['small']) * quantity;

    const order = {
        name: $('#modalProductName').text(),
        size: size || 'small', // Default to 'small' if size is undefined
        quantity: quantity,
        price: price.toFixed(2)
    };

    orders.push(order);
    updateOrderList();
    $('#orderOptionsModal').modal('hide');
});


    $('#reviewOrder').on('click', function() {
        $('#reviewOrderModal').modal('show');
        updateOrderList();
    });

    $('#fullOrderList').on('change', '.order-size', function() {
        const index = $(this).data('index');
        const newSize = $(this).val();
        const quantity = orders[index].quantity;
        const priceMap = { small: 59, medium: 69, large: 79, xl: 89 };
        orders[index].size = newSize;
        orders[index].price = priceMap[newSize] * quantity;
        updateOrderList();
    });

    $('#fullOrderList').on('input', '.order-quantity', function() {
        const index = $(this).data('index');
        const newQuantity = parseInt($(this).val());
        const size = orders[index].size;
        const priceMap = { small: 59, medium: 69, large: 79, xl: 89 };
        orders[index].quantity = newQuantity;
        orders[index].price = priceMap[size] * newQuantity;
        updateOrderList();
    });

    $('#fullOrderList').on('click', '.delete-order', function() {
        const index = $(this).data('index');
        orders.splice(index, 1);
        updateOrderList();
    });

   
    
let orderNumber = null; // Declare orderNumber globally

// Proceed to payment function where orderNumber is generated
$('#proceedToPayment').on('click', function() {
    // Generate a random order number once during the payment process
    orderNumber = Math.floor(Math.random() * 10000); 

    const orderData = orders.map(order => ({
        orderNumber: orderNumber, // Use the generated orderNumber
        name: order.name,
        size: order.size,
        quantity: order.quantity,
        price: order.price
    }));

    const dineOutOption = $('#dineIn').hasClass('active') ? 'Dine In' : 'Take Out';

    // Send the order data to the server
    // In the 'submitOrder' fetch function, include the sizes and quantities in the request body
fetch('/submitOrder', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
    },
    body: JSON.stringify({
        orders: orderData,
        totalAmount: totalAmount,
        dineOutOption: dineOutOption
    }),
})
.then(response => response.json())
.then(data => {
    if (data.message === 'Order placed successfully!') {
        $('#reviewOrderModal').modal('hide');
        $('#paymentOptionModal').modal('show');
    } else {
        alert('Error placing the order!');
    }
})
.catch(error => {
    console.error('Error:', error);
    alert('Error placing the order!');
});

});

// Dine In function
$('#dineIn').on('click', function() {
    const orderDate = new Date().toLocaleString(); // Get current datetime

    // Set order number and date in the receipt modal
    $('#orderNumber').text(`Order #${orderNumber}`).css('font-size', '32px'); // Use the orderNumber generated earlier
    $('#orderDate').text(orderDate);

    // Populate the receipt with the order items
    $('#receiptOrderList').empty();
    orders.forEach(order => {
        $('#receiptOrderList').append(`
            <li class="list-group-item">
                ${order.name} (Size: ${order.size}, Qty: ${order.quantity}) - ₱${order.price}
            </li>
        `);
    });

    // Set total amount in the receipt modal
    $('#receiptTotalAmount').text(totalAmount.toFixed(2));

    // Show the receipt modal
    $('#receiptModal').modal('show');
    $('#paymentOptionModal').modal('hide'); // Close the payment options modal
});

// Take Out function
$('#takeOut').on('click', function() {
    const orderDate = new Date().toLocaleString(); // Get current datetime

    // Set order number and date in the receipt modal
    $('#orderNumber').text(`Order #${orderNumber}`).css('font-size', '32px'); // Use the orderNumber generated earlier
    $('#orderDate').text(orderDate);

    // Populate the receipt with the order items
    $('#receiptOrderList').empty();
    orders.forEach(order => {
        $('#receiptOrderList').append(`
            <li class="list-group-item">
                ${order.name} (Size: ${order.size}, Qty: ${order.quantity}) - ₱${order.price} 
            </li>
        `);
    });

    // Set total amount in the receipt modal
    $('#receiptTotalAmount').text(totalAmount.toFixed(2));

    // Show the receipt modal
    $('#receiptModal').modal('show');
    $('#paymentOptionModal').modal('hide'); // Close the payment options modal  
});

// When the Finish button is clicked in the receipt modal, show the Thank You modal
$('#receiptModal').on('click', '.btn-primary', function() {
    // Send the inventory update request to the server
    fetch('/submitInventory', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            orders: orders, // Send the orders data
            totalAmount: totalAmount, // Send the total amount
            dineOutOption: $('#dineIn').hasClass('active') ? 'Dine In' : 'Take Out', // Include dine-in or take-out
        }),
    })
    .then(response => response.json())
    .then(data => {
        if (data.message === 'Order placed successfully!') {
            // Show the Thank You modal if the order is successfully placed
            $('#thankYouModal').modal('show');
            $('#receiptModal').modal('hide');
        } else {
            alert('Error updating inventory!');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Error updating inventory!');
    });
});

// When the "Close" button in the Thank You modal is clicked, reload the page
$('#reloadPageButton').on('click', function() {
    window.location.href = '/startKiosk'; // Redirect to the startKiosk route
});




</script>
 


<script>
    $(document).ready(function() {
        // Print the receipt modal content when the Finish button is clicked
        $('#receiptModal .btn-primary').on('click', function() {
            printReceipt();
        });

        function printReceipt() {
            // Get the content of the receipt modal
            var receiptContent = $('#receiptModal .modal-content').html();
            
            // Open a new window for printing
            var printWindow = window.open('', '', 'height=600,width=800');

            // Add styles and content to the print window
            printWindow.document.write('<html><head><title>Receipt</title>');
            printWindow.document.write('<style>');
            printWindow.document.write('body { font-family: "Courier New", Courier, monospace; background-color: white; margin: 0; padding: 0; display: flex; justify-content: center; align-items: center; height: 100vh; }');
            printWindow.document.write('.modal-content { background-color: white; border-radius: 5px; padding: 20px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); width: 300px; text-align: center; }');
            printWindow.document.write('.modal-header { text-align: center; border-bottom: 2px solid #000; padding-bottom: 10px; margin-bottom: 10px; font-weight: bold; font-size: 16px; }');
            printWindow.document.write('.modal-body { text-align: center; padding: 10px 0; }');
            printWindow.document.write('.modal-body i { font-size: 50px; color: #17a2b8; }');
            printWindow.document.write('.modal-footer { text-align: center; padding-top: 10px; font-size: 12px; margin-top: 20px; border-top: 2px solid #000; }');
            printWindow.document.write('.modal-footer .total { font-size: 18px; font-weight: bold; margin-top: 5px; }');
            printWindow.document.write('</style></head><body>');
            printWindow.document.write('<div class="modal-content">' + receiptContent + '</div>');
            printWindow.document.write('</body></html>');
            
            // Wait for the content to load before calling the print function
            printWindow.document.close();
            printWindow.print();
        }
    });
</script>


</body>
</html>
